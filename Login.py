# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Login.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

connectMongoDB = 'mongodb+srv://thanapat:thithi41@cluster0.yl4di.mongodb.net/<dbname>?retryWrites=true&w=majority'
from PyQt5 import QtCore, QtGui, QtWidgets
import pymongo
import dns
import ctypes
from Manager import Ui_Manager

class Ui_Login(object):
    def setupUi(self, Login,Pizza):
        Login.setObjectName("Login")
        Login.setWindowModality(QtCore.Qt.NonModal)
        Login.setEnabled(True)
        Login.resize(440, 325)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(Login.sizePolicy().hasHeightForWidth())
        Login.setSizePolicy(sizePolicy)
        Login.setMinimumSize(QtCore.QSize(1, 1))
        Login.setMaximumSize(QtCore.QSize(572, 416))
        Login.setFocusPolicy(QtCore.Qt.NoFocus)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("Pictures/icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        Login.setWindowIcon(icon)
        Login.setToolTip("")
        Login.setStyleSheet("")
        Login.setModal(False)
        self.butBack = QtWidgets.QPushButton(Login)
        self.butBack.setGeometry(QtCore.QRect(80, 260, 131, 31))
        self.butBack.setStyleSheet("border-radius: 10px;\n"
"background-color: rgb(255, 255, 255);\n"
"color: rgb(170, 85, 0);\n"
"")
        self.butBack.setObjectName("butBack")
        self.butLogin = QtWidgets.QPushButton(Login)
        self.butLogin.setGeometry(QtCore.QRect(240, 260, 121, 31))
        self.butLogin.setStyleSheet("border-radius: 10px;\n"
"background-color: rgb(170, 85, 0);\n"
"color: white;")
        self.butLogin.setObjectName("butLogin")
        self.label_3 = QtWidgets.QLabel(Login)
        self.label_3.setGeometry(QtCore.QRect(120, 13, 341, 51))
        self.label_3.setStyleSheet("font: 24pt \"MS Shell Dlg 2\";\n"
"color: rgb(0, 0, 0);")
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(Login)
        self.label_4.setGeometry(QtCore.QRect(110, 85, 91, 21))
        self.label_4.setStyleSheet("color: rgb(170, 85, 0);\n"
"font: 75 10pt \"MS Shell Dlg 2\";")
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(Login)
        self.label_5.setGeometry(QtCore.QRect(110, 155, 91, 21))
        self.label_5.setStyleSheet("color: rgb(170, 85, 0);\n"
"font: 75 10pt \"MS Shell Dlg 2\";")
        self.label_5.setObjectName("label_5")
        self.leUsername = QtWidgets.QLineEdit(Login)
        self.leUsername.setGeometry(QtCore.QRect(110, 110, 221, 31))
        self.leUsername.setObjectName("leUsername")
        self.lePassword = QtWidgets.QLineEdit(Login)
        self.lePassword.setGeometry(QtCore.QRect(110, 180, 221, 31))
        self.lePassword.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lePassword.setObjectName("lePassword")

        self.retranslateUi(Login)
        QtCore.QMetaObject.connectSlotsByName(Login)

        self.Pizza = Pizza
        self.Login = Login

        self.butBack.clicked.connect(self.backsystem)
        self.butLogin.clicked.connect(self.LoginMain)

    def backsystem(self):
        self.Pizza.show()
        self.Login.close()

    def LoginMain(self):
        username = self.leUsername.text()
        password = self.lePassword.text()
        with pymongo.MongoClient(connectMongoDB) as conn:
            db = conn.get_database('Project_Pizza')
            where = {'$and': [{'username': username}, {'password': password}]}
            cursor = db.Pizza.find(where)
            Found = db.Manager.count_documents(where)
            name = ''
            for i in cursor:
                name = i['username']
            if Found == 1:
                ctypes.windll.user32.MessageBoxW(0, "Welcome", "Welcome", 0)
                self.openManager()
            else:
                ctypes.windll.user32.MessageBoxW(0, "Username or Password is incorrect!", "Warning", 0)

    def openManager(self):
        self.windows = QtWidgets.QDialog()
        self.ui = Ui_Manager()
        self.ui.setupUi(self.windows,self.Login,self.Pizza)
        self.windows.show()
        self.Login.hide()


    def retranslateUi(self, Login):
        _translate = QtCore.QCoreApplication.translate
        Login.setWindowTitle(_translate("Login", "Login"))
        self.butBack.setText(_translate("Login", "Back"))
        self.butLogin.setText(_translate("Login", "Login"))
        self.label_3.setText(_translate("Login", "Login Manager"))
        self.label_4.setText(_translate("Login", "Username"))
        self.label_5.setText(_translate("Login", "Password"))
#import Pictures_rc


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Login = QtWidgets.QDialog()
    ui = Ui_Login()
    ui.setupUi(Login)
    Login.show()
    sys.exit(app.exec_())
