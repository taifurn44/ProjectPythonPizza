# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Menu.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


connectMongoDB = 'mongodb+srv://thanapat:thithi41@cluster0.yl4di.mongodb.net/<dbname>?retryWrites=true&w=majority'
from PyQt5 import QtCore, QtGui, QtWidgets
import pymongo
import dns
from datetime import datetime
from PyQt5.QtWidgets import QTableWidgetItem
from Order import Ui_Order
import base64
import ctypes
import lib_Help
MB_OK = 0x0
MB_OKCXL = 0x01
MB_YESNOCXL = 0x03
MB_YESNO = 0x04
MB_HELP = 0x4000
ICON_EXLAIM = 0x30
ICON_INFO = 0x40
ICON_STOP = 0x10


class Ui_Menu(object):
    def order(self):
        row = self.tableWidget.currentRow()
        name = self.tableWidget.item(row, 0).text()
        type = self.tableWidget.item(row, 1).text()
        if self.radioSizeL.isChecked() == True:
            price = self.tableWidget.item(row, 3).text()
        else:
            price = self.tableWidget.item(row, 2).text()
        amount = self.cbxAmount.currentText()
        lib_Help.order(name, type, price, amount)
        self.showDataOrder(lib_Help.getOrder())

    def showDataOrder(self, inputOrder):
        self.twBucket.setRowCount(0)
        countitem = 0
        for rowdata in inputOrder:
            self.twBucket.insertRow(countitem)
            countcol = 0
            for data in rowdata.values():
                self.twBucket.setItem(countitem, countcol, QtWidgets.QTableWidgetItem('{}'.format(data)))
                countcol += 1
            countitem += 1

    def comitorder(self):
        if len(lib_Help.ordermenu) == 0:
            ctypes.windll.user32.MessageBoxW(0, "Please select item!!", "Warning", ICON_EXLAIM | MB_OK)
        else:
            result = ctypes.windll.user32.MessageBoxW(0, "Do you want commit to menu ?", "Commit", 4)
            if result == 7:
                print()
            elif result == 6:
                lib_Help.gettoOrder()
                self.windows = QtWidgets.QDialog()
                self.ui = Ui_Order()
                self.ui.setupUi(self.windows,self.Menu,self.Pizza)
                self.windows.show()
                self.Menu.close()

    def showimage(self):
        if self.radioShowdetail.isChecked() == True:
            row = self.tableWidget.currentRow()
            menu = self.tableWidget.item(row, 0).text()
            pricem = self.tableWidget.item(row, 2).text()
            pricel = self.tableWidget.item(row, 3).text()
            self.lblPname.setText("{}".format(menu))
            self.lblPriceM.setText("{:,}".format(float(pricem)))
            self.lblPriceL.setText("{:,}".format(float(pricel)))
            with pymongo.MongoClient(connectMongoDB) as conn:
                db = conn.get_database('Project_Pizza')
                where = {'topping': menu}
                cursor = db.Pizza.find(where)
                for i in cursor:
                    base64_data = i['image']
                    pm = QtGui.QPixmap()
                    pm.loadFromData(base64.b64decode(base64_data))
                    self.lblPicture.setPixmap(
                        QtGui.QPixmap(pm).scaled(self.lblPicture.width(), self.lblPicture.height(),
                                                 QtCore.Qt.KeepAspectRatioByExpanding))

    def backsystem(self):
        lib_Help.clearorder()
        self.Pizza.show()
        self.Menu.close()

    def remove(self):
        row = self.twBucket.currentRow()
        if row == -1:
            ctypes.windll.user32.MessageBoxW(0, "Please select item to cancel!!", "Warning", ICON_EXLAIM | MB_OK)
        else:
            lib_Help.removeOrder(row)
            self.showDataOrder(lib_Help.getOrder())

    def display(self, condition):
        with pymongo.MongoClient(connectMongoDB) as conn:
            db = conn.get_database('Project_Pizza')
            where = condition
            count = db.Pizza.count_documents(where)
            cursor = db.Pizza.find(where)

            ## Table Widget
            self.tableWidget.setRowCount(count)
            self.tableWidget.setColumnCount(4)

            header1 = QtWidgets.QTableWidgetItem("Menu")
            header2 = QtWidgets.QTableWidgetItem("Type")
            header3 = QtWidgets.QTableWidgetItem("Price Size M")
            header4 = QtWidgets.QTableWidgetItem("Price Size L")

            self.tableWidget.setHorizontalHeaderItem(0, header1)
            self.tableWidget.setHorizontalHeaderItem(1, header2)
            self.tableWidget.setHorizontalHeaderItem(2, header3)
            self.tableWidget.setHorizontalHeaderItem(3, header4)

            row = 0
            for i in cursor:
                self.tableWidget.setItem(row, 0, QTableWidgetItem("{}".format(i['topping'])))
                self.tableWidget.setItem(row, 1, QTableWidgetItem("{}".format(i['type'])))
                self.tableWidget.setItem(row, 2, QTableWidgetItem("{}".format(i['product'][0]['price'])))
                self.tableWidget.setItem(row, 3, QTableWidgetItem("{}".format(i['product'][1]['price'])))
                row += 1

            horder1 = QtWidgets.QTableWidgetItem("Name")
            horder2 = QtWidgets.QTableWidgetItem("Type")
            horder3 = QtWidgets.QTableWidgetItem("Price")
            horder4 = QtWidgets.QTableWidgetItem("Amount")

            self.twBucket.setHorizontalHeaderItem(0, horder1)
            self.twBucket.setHorizontalHeaderItem(1, horder2)
            self.twBucket.setHorizontalHeaderItem(2, horder3)
            self.twBucket.setHorizontalHeaderItem(3, horder4)

    def setupUi(self, Menu,Pizza):
        Menu.setObjectName("Menu")
        Menu.setWindowModality(QtCore.Qt.NonModal)
        Menu.setEnabled(True)
        Menu.resize(930, 478)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(Menu.sizePolicy().hasHeightForWidth())
        Menu.setSizePolicy(sizePolicy)
        Menu.setMinimumSize(QtCore.QSize(1, 1))
        Menu.setMaximumSize(QtCore.QSize(9000, 9000))
        Menu.setFocusPolicy(QtCore.Qt.NoFocus)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("Pictures/icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        Menu.setWindowIcon(icon)
        Menu.setToolTip("")
        Menu.setStyleSheet("")
        Menu.setModal(False)
        self.label = QtWidgets.QLabel(Menu)
        self.label.setEnabled(True)
        self.label.setGeometry(QtCore.QRect(0, 0, 801, 551))
        self.label.setMinimumSize(QtCore.QSize(441, 301))
        self.label.setMaximumSize(QtCore.QSize(9999, 9999))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("Pictures/269 (1).jpg"))
        self.label.setObjectName("label")
        self.lblPicture = QtWidgets.QLabel(Menu)
        self.lblPicture.setGeometry(QtCore.QRect(370, 70, 211, 141))
        self.lblPicture.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius: 10px;")
        self.lblPicture.setText("")
        self.lblPicture.setObjectName("lblPicture")
        self.label_5 = QtWidgets.QLabel(Menu)
        self.label_5.setGeometry(QtCore.QRect(0, 10, 351, 41))
        self.label_5.setStyleSheet("background-color: rgba(144, 144, 144, 250);\n"
"border-radius: 10px;")
        self.label_5.setText("")
        self.label_5.setObjectName("label_5")
        self.label_2 = QtWidgets.QLabel(Menu)
        self.label_2.setGeometry(QtCore.QRect(120, 10, 111, 41))
        self.label_2.setStyleSheet("font: 75 26pt \"MS Shell Dlg 2\";\n"
"color: rgb(255, 255, 255);")
        self.label_2.setObjectName("label_2")
        self.label_10 = QtWidgets.QLabel(Menu)
        self.label_10.setGeometry(QtCore.QRect(360, 220, 231, 161))
        self.label_10.setStyleSheet("background-color: rgba(144, 144, 144, 250);\n"
"border-radius: 10px;")
        self.label_10.setText("")
        self.label_10.setObjectName("label_10")
        self.lblPname = QtWidgets.QLabel(Menu)
        self.lblPname.setGeometry(QtCore.QRect(380, 227, 201, 31))
        self.lblPname.setStyleSheet("font: 75 12pt \"MS Shell Dlg 2\";\n"
"color: rgb(255, 255, 255);")
        self.lblPname.setObjectName("lblPname")
        self.label_9 = QtWidgets.QLabel(Menu)
        self.label_9.setGeometry(QtCore.QRect(410, 325, 61, 31))
        self.label_9.setStyleSheet("font: 75 10pt \"MS Shell Dlg 2\";\n"
"color: rgb(255, 255, 255);")
        self.label_9.setObjectName("label_9")
        self.cbxAmount = QtWidgets.QComboBox(Menu)
        self.cbxAmount.setGeometry(QtCore.QRect(491, 330, 69, 22))
        self.cbxAmount.setObjectName("cbxAmount")
        self.cbxAmount.addItem('1')
        self.cbxAmount.addItem('2')
        self.cbxAmount.addItem('3')
        self.cbxAmount.addItem('4')
        self.cbxAmount.addItem('5')
        self.butBack = QtWidgets.QPushButton(Menu)
        self.butBack.setGeometry(QtCore.QRect(20, 430, 221, 41))
        self.butBack.setStyleSheet("border-radius: 10px;\n"
"background-color: rgb(255, 255, 255);\n"
"color: rgb(170, 85, 0);\n"
"")
        self.butBack.setObjectName("butBack")
        self.butAdd = QtWidgets.QPushButton(Menu)
        self.butAdd.setGeometry(QtCore.QRect(410, 370, 121, 31))
        self.butAdd.setStyleSheet("border-radius: 10px;\n"
"background-color: rgb(170, 85, 0);\n"
"color: white;")
        self.butAdd.setObjectName("butAdd")
        self.lblPname_3 = QtWidgets.QLabel(Menu)
        self.lblPname_3.setGeometry(QtCore.QRect(360, 10, 141, 41))
        self.lblPname_3.setStyleSheet("font: 75 20pt \"MS Shell Dlg 2\";\n"
"color: rgb(255, 255, 255);\n"
"")
        self.lblPname_3.setObjectName("lblPname_3")
        self.tableWidget = QtWidgets.QTableWidget(Menu)
        self.tableWidget.setGeometry(QtCore.QRect(10, 60, 331, 251))
        self.tableWidget.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius: 10px;")
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(0)
        self.tableWidget.setRowCount(0)
        self.radioShowdetail = QtWidgets.QRadioButton(Menu)
        self.radioShowdetail.setGeometry(QtCore.QRect(500, 50, 82, 17))
        self.radioShowdetail.setStyleSheet("color: rgb(255, 255, 255);")
        self.radioShowdetail.setObjectName("radioShowdetail")
        self.lblPriceM = QtWidgets.QLabel(Menu)
        self.lblPriceM.setGeometry(QtCore.QRect(500, 260, 71, 31))
        self.lblPriceM.setStyleSheet("font: 75 10pt \"MS Shell Dlg 2\";\n"
"color: rgb(255, 255, 255);")
        self.lblPriceM.setObjectName("lblPriceM")
        self.lblPriceL = QtWidgets.QLabel(Menu)
        self.lblPriceL.setGeometry(QtCore.QRect(500, 293, 71, 31))
        self.lblPriceL.setStyleSheet("font: 75 10pt \"MS Shell Dlg 2\";\n"
"color: rgb(255, 255, 255);")
        self.lblPriceL.setObjectName("lblPriceL")
        self.radioSizeM = QtWidgets.QRadioButton(Menu)
        self.radioSizeM.setGeometry(QtCore.QRect(400, 270, 91, 17))
        self.radioSizeM.setStyleSheet("font: 75 10pt \"MS Shell Dlg 2\";\n"
"color: rgb(255, 255, 255);")
        self.radioSizeM.setObjectName("radioSizeM")
        self.buttonGroup = QtWidgets.QButtonGroup(Menu)
        self.buttonGroup.setObjectName("buttonGroup")
        self.buttonGroup.addButton(self.radioSizeM)
        self.radioSizeL = QtWidgets.QRadioButton(Menu)
        self.radioSizeL.setGeometry(QtCore.QRect(400, 300, 91, 17))
        self.radioSizeL.setStyleSheet("font: 75 10pt \"MS Shell Dlg 2\";\n"
"color: rgb(255, 255, 255);")
        self.radioSizeL.setObjectName("radioSizeL")
        self.buttonGroup.addButton(self.radioSizeL)
        self.label_3 = QtWidgets.QLabel(Menu)
        self.label_3.setEnabled(True)
        self.label_3.setGeometry(QtCore.QRect(800, 0, 801, 551))
        self.label_3.setMinimumSize(QtCore.QSize(441, 301))
        self.label_3.setMaximumSize(QtCore.QSize(9999, 9999))
        self.label_3.setText("")
        self.label_3.setPixmap(QtGui.QPixmap("Pictures/269 (1).jpg"))
        self.label_3.setObjectName("label_3")
        self.label_6 = QtWidgets.QLabel(Menu)
        self.label_6.setGeometry(QtCore.QRect(630, 10, 251, 41))
        self.label_6.setStyleSheet("background-color: rgba(144, 144, 144, 250);\n"
"border-radius: 10px;")
        self.label_6.setText("")
        self.label_6.setObjectName("label_6")
        self.label_4 = QtWidgets.QLabel(Menu)
        self.label_4.setGeometry(QtCore.QRect(700, 8, 221, 41))
        self.label_4.setStyleSheet("font: 75 26pt \"MS Shell Dlg 2\";\n"
"color: rgb(255, 255, 255);")
        self.label_4.setObjectName("label_4")
        self.twBucket = QtWidgets.QTableWidget(Menu)
        self.twBucket.setGeometry(QtCore.QRect(610, 60, 281, 271))
        self.twBucket.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius: 10px;")
        self.twBucket.setObjectName("twBucket")
        self.twBucket.setColumnCount(4)
        self.twBucket.setRowCount(0)
        self.butAdd_3 = QtWidgets.QPushButton(Menu)
        self.butAdd_3.setGeometry(QtCore.QRect(680, 420, 231, 41))
        self.butAdd_3.setStyleSheet("border-radius: 10px;\n"
"background-color: rgb(170, 85, 0);\n"
"color: white;")
        self.butAdd_3.setObjectName("butAdd_3")
        self.butRemove = QtWidgets.QPushButton(Menu)
        self.butRemove.setGeometry(QtCore.QRect(690, 340, 121, 31))
        self.butRemove.setStyleSheet("border-radius: 10px;\n"
"background-color: rgb(170, 85, 0);\n"
"color: white;")
        self.butRemove.setObjectName("butRemove")

        self.retranslateUi(Menu)
        QtCore.QMetaObject.connectSlotsByName(Menu)

        self.display({})
        self.butBack.clicked.connect(self.backsystem)
        self.tableWidget.horizontalHeader().setDefaultSectionSize(115)
        self.tableWidget.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.tableWidget.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.twBucket.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.twBucket.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.radioShowdetail.setChecked(True)
        self.tableWidget.selectRow(0)
        self.radioShowdetail.hide()
        self.tableWidget.clicked.connect(self.showimage)
        self.butAdd.clicked.connect(self.order)
        self.butAdd_3.clicked.connect(self.comitorder)
        self.butRemove.clicked.connect(self.remove)
        self.Pizza = Pizza
        self.Menu = Menu

    def retranslateUi(self, Menu):
        _translate = QtCore.QCoreApplication.translate
        Menu.setWindowTitle(_translate("Menu", "Menu"))
        self.label_2.setText(_translate("Menu", "Menu"))
        self.lblPname.setText(_translate("Menu", "Name Menu"))
        self.label_9.setText(_translate("Menu", "Amount"))
        self.butBack.setText(_translate("Menu", "Back"))
        self.butAdd.setText(_translate("Menu", "Add Bucket"))
        self.lblPname_3.setText(_translate("Menu", "Menu Detail"))
        self.radioShowdetail.setText(_translate("Menu", "Show Detail"))
        self.lblPriceM.setText(_translate("Menu", "239"))
        self.lblPriceL.setText(_translate("Menu", "239"))
        self.radioSizeM.setText(_translate("Menu", "Size M"))
        self.radioSizeL.setText(_translate("Menu", "Size L"))
        self.label_4.setText(_translate("Menu", "Bucket"))
        self.butAdd_3.setText(_translate("Menu", "Confirm Order"))
        self.butRemove.setText(_translate("Menu", "Remove"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Menu = QtWidgets.QDialog()
    ui = Ui_Menu()
    ui.setupUi(Menu)
    Menu.show()
    sys.exit(app.exec_())
