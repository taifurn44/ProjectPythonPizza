# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'EditMenu.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


connectMongoDB = 'mongodb+srv://thanapat:thithi41@cluster0.yl4di.mongodb.net/<dbname>?retryWrites=true&w=majority'
from PyQt5 import QtCore, QtGui, QtWidgets
import pymongo
import dns
import ctypes
from PyQt5.QtWidgets import QApplication,QWidget, QVBoxLayout, QPushButton, QFileDialog , QLabel, QTextEdit
from PyQt5.QtGui import QPixmap
import base64

class Ui_EditMenu(object):

    def __init__(self):
        self.uploadImage = None
        self.cursor = None

        self.currentId = None
        self.currentImage = None

    def setupUi(self,Manager ,cursor):
        self.cursor = cursor
        Manager.setObjectName("Manager")
        Manager.setWindowModality(QtCore.Qt.NonModal)
        Manager.setEnabled(True)
        Manager.resize(406, 539)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(Manager.sizePolicy().hasHeightForWidth())
        Manager.setSizePolicy(sizePolicy)
        Manager.setMinimumSize(QtCore.QSize(1, 1))
        Manager.setMaximumSize(QtCore.QSize(800, 600))
        Manager.setFocusPolicy(QtCore.Qt.NoFocus)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("Pictures/icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        Manager.setWindowIcon(icon)
        Manager.setToolTip("")
        Manager.setStyleSheet("")
        Manager.setModal(False)
        self.butAddmenu = QtWidgets.QPushButton(Manager)
        self.butAddmenu.setGeometry(QtCore.QRect(240, 470, 141, 41))
        self.butAddmenu.setStyleSheet("border-radius: 10px;\n"
"background-color: rgb(170, 85, 0);\n"
"color: white;")
        self.butAddmenu.setObjectName("butAddmenu")
        self.label_3 = QtWidgets.QLabel(Manager)
        self.label_3.setGeometry(QtCore.QRect(20, 10, 341, 31))
        self.label_3.setStyleSheet("font: 16pt \"MS Shell Dlg 2\";\n"
"color: rgb(0, 0, 0);")
        self.label_3.setObjectName("label_3")
        self.lblPicture = QtWidgets.QLabel(Manager)
        self.lblPicture.setGeometry(QtCore.QRect(100, 60, 221, 141))
        self.lblPicture.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lblPicture.setText("")
        self.lblPicture.setObjectName("lblPicture")
        self.butAddpriture = QtWidgets.QPushButton(Manager)
        self.butAddpriture.setGeometry(QtCore.QRect(140, 210, 141, 21))
        self.butAddpriture.setStyleSheet("border-radius: 10px;\n"
"background-color: rgb(170, 85, 0);\n"
"color: white;")
        self.butAddpriture.setObjectName("butAddpriture")
        self.label_7 = QtWidgets.QLabel(Manager)
        self.label_7.setGeometry(QtCore.QRect(30, 380, 81, 31))
        self.label_7.setStyleSheet("font: 75 10pt \"MS Shell Dlg 2\";\n"
"")
        self.label_7.setObjectName("label_7")
        self.lblDescition_2 = QtWidgets.QLabel(Manager)
        self.lblDescition_2.setGeometry(QtCore.QRect(70, 300, 41, 31))
        self.lblDescition_2.setStyleSheet("font: 75 10pt \"MS Shell Dlg 2\";\n"
"")
        self.lblDescition_2.setObjectName("lblDescition_2")
        self.txtPizza = QtWidgets.QTextEdit(Manager)
        self.txtPizza.setGeometry(QtCore.QRect(120, 300, 191, 31))
        self.txtPizza.setObjectName("txtPizza")
        self.txtPrice_M = QtWidgets.QTextEdit(Manager)
        self.txtPrice_M.setGeometry(QtCore.QRect(120, 380, 191, 31))
        self.txtPrice_M.setObjectName("txtPrice_M")
        self.label_8 = QtWidgets.QLabel(Manager)
        self.label_8.setGeometry(QtCore.QRect(30, 420, 81, 31))
        self.label_8.setStyleSheet("font: 75 10pt \"MS Shell Dlg 2\";\n"
"")
        self.label_8.setObjectName("label_8")
        self.txtPrice_L = QtWidgets.QTextEdit(Manager)
        self.txtPrice_L.setGeometry(QtCore.QRect(120, 420, 191, 31))
        self.txtPrice_L.setObjectName("txtPrice_L")
        self.lblDescition_3 = QtWidgets.QLabel(Manager)
        self.lblDescition_3.setGeometry(QtCore.QRect(70, 340, 41, 31))
        self.lblDescition_3.setStyleSheet("font: 75 10pt \"MS Shell Dlg 2\";\n"
"")
        self.lblDescition_3.setObjectName("lblDescition_3")
        self.comboBox = QtWidgets.QComboBox(Manager)
        self.comboBox.setGeometry(QtCore.QRect(120, 340, 191, 31))
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem('Pizza')
        self.comboBox.addItem('Chicken')
        self.comboBox.addItem('Combo')
        self.lblDescition_4 = QtWidgets.QLabel(Manager)
        self.lblDescition_4.setGeometry(QtCore.QRect(90, 260, 21, 31))
        self.lblDescition_4.setStyleSheet("font: 75 10pt \"MS Shell Dlg 2\";\n"
"")
        self.lblDescition_4.setObjectName("lblDescition_4")
        self.txtPizza_2 = QtWidgets.QTextEdit(Manager)
        self.txtPizza_2.setGeometry(QtCore.QRect(120, 260, 191, 31))
        self.txtPizza_2.setObjectName("txtPizza_2")

        self.retranslateUi(Manager)
        QtCore.QMetaObject.connectSlotsByName(Manager)
        self.display(cursor)
        self.butAddpriture.clicked.connect(self.getImage)
        self.butAddmenu.clicked.connect(self.UpdateMenu)
        self.Manager = Manager

    def display(self, cursor):
        cursor = cursor
        self.txtPizza_2.setEnabled(False)
        for i in cursor:
            self.txtPizza_2.setText("{}".format(i['id']))
            self.txtPizza.setText("{}".format(i['topping']))
            # print(self.comboBox.findText((i['type'])))
            self.comboBox.setCurrentIndex(self.comboBox.findText((i['type'])))
            self.txtPrice_M.setText("{}".format(i['product'][0]['price']))
            self.txtPrice_L.setText("{}".format(i['product'][1]['price']))
            base64_data = i['image']

            self.currentId = i['id']
            self.currentImage = i['image']

            pm = QtGui.QPixmap()
            pm.loadFromData(base64.b64decode(base64_data))
            self.lblPicture.setPixmap(
                QtGui.QPixmap(pm).scaled(self.lblPicture.width(), self.lblPicture.height(),
                                         QtCore.Qt.KeepAspectRatioByExpanding))


    def UpdateMenu(self):
        id = self.txtPizza_2.toPlainText()
        menu = self.txtPizza.toPlainText()
        typemenu = self.comboBox.currentText()
        picem = self.txtPrice_M.toPlainText()
        picel = self.txtPrice_L.toPlainText()

        image = str(self.uploadImage).split("'")[1] if self.uploadImage else self.currentImage
        if id == '' or menu == '' or typemenu == '' or picel == '' or picel == '' or image == '':
            ctypes.windll.user32.MessageBoxW(0, "Please fill out all information", "Warning", 0)
        elif picem.isnumeric() != True or picel.isnumeric() != True:
            ctypes.windll.user32.MessageBoxW(0, "Price must be number", "Warning", 0)
        else:
            with pymongo.MongoClient(connectMongoDB) as conn:
                db = conn.get_database('Project_Pizza')
                db.Pizza.update_one({'id': {'$eq': self.currentId}},{'$set':{'id': int(id), 'topping': menu, 'descrition': '',
                                     'product': [{'size': 'M', 'price': int(picem)},
                                                 {'size': 'L', 'price': int(picel)}],
                                     'crust': ['Pan', 'Crispy thin'],
                                     'image': image,
                                     'type': typemenu
                                     }})
                ctypes.windll.user32.MessageBoxW(0, "Edit Successful", "Edit", 0)
                self.Manager.close()

    # getImage
    def getImage(self):
        filename = QtWidgets.QFileDialog.getOpenFileName()
        global path
        path = filename[0]
        if path != '':
            self.lblPicture.setPixmap(QtGui.QPixmap(path).scaled(self.lblPicture.width(), self.lblPicture.height(),
                                                                 QtCore.Qt.KeepAspectRatioByExpanding))
            with open(path, 'rb') as fe:
                self.uploadImage = base64.b64encode(fe.read())

    def retranslateUi(self, Manager):
        _translate = QtCore.QCoreApplication.translate
        Manager.setWindowTitle(_translate("Manager", "Manager"))
        self.butAddmenu.setText(_translate("Manager", "Edit Menu"))
        self.label_3.setText(_translate("Manager", "Edit Menu"))
        self.butAddpriture.setText(_translate("Manager", "Add Picture"))
        self.label_7.setText(_translate("Manager", "Price Size M :"))
        self.lblDescition_2.setText(_translate("Manager", "Menu :"))
        self.label_8.setText(_translate("Manager", "Price Size L :"))
        self.lblDescition_3.setText(_translate("Manager", "Type :"))
        self.lblDescition_4.setText(_translate("Manager", "ID :"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Manager = QtWidgets.QDialog()
    ui = Ui_EditMenu()
    ui.setupUi(Manager)
    Manager.show()
    sys.exit(app.exec_())
